// Generated by Selenium IDE - updated manually
const { Builder, By, Key, until } = require("selenium-webdriver");
const assert = require("assert");
require("dotenv").config();
const { Util } = require("../test.utils.cjs");

describe("Default Suite", function () {
  this.timeout(30000);
  let driver;
  let vars;
  beforeEach(async function () {
    driver = await new Builder()
      .forBrowser("firefox")
      .usingServer(`http://${process.env.SE_SERVER_IP}/wd/hub`)
      .build();
    vars = {};
  });
  afterEach(async function () {
    await driver.quit();
  });
  it("login_form_positive", async function () {
    await driver.get(
      "https://practicetestautomation.com/practice-test-login//practice-test-login/"
    );
    await driver.findElement(By.id("username")).sendKeys(process.env.USER_NAME);
    await driver.findElement(By.id("password")).sendKeys(process.env.PASSWORD);
    await driver.findElement(By.id("submit")).click();
    await driver.wait(until.elementLocated(By.css(".post-title")), 30000);
    assert(
      (await driver.findElement(By.css(".post-title")).getText()) ==
        "Logged In Successfully"
    );
  });
  it("login_form_negative_name", async function () {
    await driver.get(
      "https://practicetestautomation.com/practice-test-login//practice-test-login/"
    );
    await driver.findElement(By.id("username")).sendKeys("invalid-user");
    await driver.findElement(By.id("password")).sendKeys(process.env.PASSWORD);
    await driver.findElement(By.id("submit")).click();
    await driver.wait(until.elementLocated(By.id("error")), 30000);
    assert(
      (await driver.findElement(By.id("error")).getText()) ==
        "Your username is invalid!"
    );
  });
  it("login_form_negative_password", async function () {
    await driver.get("https://practicetestautomation.com/practice-test-login/");
    await driver.findElement(By.id("username")).sendKeys(process.env.USER_NAME);
    await driver.findElement(By.id("password")).sendKeys("invalid-password");
    await driver.findElement(By.id("submit")).click();
    await driver.wait(until.elementLocated(By.id("error")), 30000);
    assert(
      (await driver.findElement(By.id("error")).getText()) ==
        "Your password is invalid!"
    );
  });
});
